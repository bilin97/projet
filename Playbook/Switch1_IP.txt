
PLAY [Ansible Network Automation] ******************************************************************************************

TASK [show arp] ************************************************************************************************************
changed: [SW1]


TASK [debug] ***************************************************************************************************************
ok: [SW1] => {
    "print_output.stdout_lines": [
        "",
        "Protocol  Address          Age (min)  Hardware Addr   Type   Interface",
        "Internet  192.168.122.1          17   5254.007b.5093  ARPA   GigabitEthernet0/0",
        "Internet  192.168.122.51        172   0cba.b9c0.0000  ARPA   GigabitEthernet0/0",
        "Internet  192.168.122.53        172   ca01.4156.0000  ARPA   GigabitEthernet0/0",
        "Internet  192.168.122.61          -   0c39.1028.0000  ARPA   GigabitEthernet0/0",
        "Internet  192.168.122.91        244   86ab.e53a.e9ab  ARPA   GigabitEthernet0/0"
    ]
}
ok: [SW2] => {
    "print_output.stdout_lines": [
        "",
        "Protocol  Address          Age (min)  Hardware Addr   Type   Interface",
        "Internet  192.168.122.1          20   5254.007b.5093  ARPA   GigabitEthernet0/0",
        "Internet  192.168.122.51        172   0cba.b9c0.0000  ARPA   GigabitEthernet0/0",
        "Internet  192.168.122.53        172   ca01.4156.0000  ARPA   GigabitEthernet0/0",
        "Internet  192.168.122.62          -   0c04.bfdf.0000  ARPA   GigabitEthernet0/0",
        "Internet  192.168.122.91        245   86ab.e53a.e9ab  ARPA   GigabitEthernet0/0"
    ]
}

TASK [show cdp neighbors] **************************************************************************************************
changed: [SW1]
changed: [SW2]

TASK [debug] ***************************************************************************************************************
ok: [SW1] => {
    "print_output.stdout_lines": [
        "",
        "Capability Codes: R - Router, T - Trans Bridge, B - Source Route Bridge",
        "                  S - Switch, H - Host, I - IGMP, r - Repeater, P - Phone, ",
        "                  D - Remote, C - CVTA, M - Two-port Mac Relay ",
        "",
        "Device ID        Local Intrfce     Holdtme    Capability  Platform  Port ID",
        "sw2.netautomation.com",
        "                 Gig 0/0           154             R S I            Gig 0/0",
        "r4.netautomation.com",
        "                 Gig 0/0           145               R    7206VXR   Fas 0/0",
        "R3.netautomation.com",
        "                 Gig 0/0           168              R B             Gig 0/0",
        "",
        "Total cdp entries displayed : 3"
    ]
}
ok: [SW2] => {
    "print_output.stdout_lines": [
        "",
        "Capability Codes: R - Router, T - Trans Bridge, B - Source Route Bridge",
        "                  S - Switch, H - Host, I - IGMP, r - Repeater, P - Phone, ",
        "                  D - Remote, C - CVTA, M - Two-port Mac Relay ",
        "",
        "Device ID        Local Intrfce     Holdtme    Capability  Platform  Port ID",
        "sw1.netautomation.com",
        "                 Gig 0/0           166             R S I            Gig 0/0",
        "r4.netautomation.com",
        "                 Gig 0/0           145               R    7206VXR   Fas 0/0",
        "R3.netautomation.com",
        "                 Gig 0/0           168              R B             Gig 0/0",
        "",
        "Total cdp entries displayed : 3"
    ]
}


TASK [show ip route] *******************************************************************************************************
changed: [SW1]
changed: [SW2]

TASK [debug] ***************************************************************************************************************
ok: [SW1] => {
    "print_output.stdout_lines": [
        "",
        "Codes: L - local, C - connected, S - static, R - RIP, M - mobile, B - BGP",
        "       D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area ",
        "       N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2",
        "       E1 - OSPF external type 1, E2 - OSPF external type 2",
        "       i - IS-IS, su - IS-IS summary, L1 - IS-IS level-1, L2 - IS-IS level-2",
        "       ia - IS-IS inter area, * - candidate default, U - per-user static route",
        "       o - ODR, P - periodic downloaded static route, H - NHRP, l - LISP",
        "       a - application route",
        "       + - replicated route, % - next hop override",
        "",
        "Gateway of last resort is not set",
        "",
        "      192.168.122.0/24 is variably subnetted, 2 subnets, 2 masks",
        "C        192.168.122.0/24 is directly connected, GigabitEthernet0/0",
        "L        192.168.122.61/32 is directly connected, GigabitEthernet0/0"
    ]
}
ok: [SW2] => {
    "print_output.stdout_lines": [
        "",
        "Codes: L - local, C - connected, S - static, R - RIP, M - mobile, B - BGP",
        "       D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area ",
        "       N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2",
        "       E1 - OSPF external type 1, E2 - OSPF external type 2",
        "       i - IS-IS, su - IS-IS summary, L1 - IS-IS level-1, L2 - IS-IS level-2",
        "       ia - IS-IS inter area, * - candidate default, U - per-user static route",
        "       o - ODR, P - periodic downloaded static route, H - NHRP, l - LISP",
        "       a - application route",
        "       + - replicated route, % - next hop override",
        "",
        "Gateway of last resort is not set",
        "",
        "      192.168.122.0/24 is variably subnetted, 2 subnets, 2 masks",
        "C        192.168.122.0/24 is directly connected, GigabitEthernet0/0",
        "L        192.168.122.62/32 is directly connected, GigabitEthernet0/0"
    ]
}

TASK [show ip protocols] ***************************************************************************************************
changed: [SW1]
changed: [SW2]

TASK [debug] ***************************************************************************************************************
ok: [SW1] => {
    "print_output.stdout_lines": [
        "",
        "*** IP Routing is NSF aware ***",
        "",
        "Routing Protocol is \"application\"",
        "  Sending updates every 0 seconds",
        "  Invalid after 0 seconds, hold down 0, flushed after 0",
        "  Outgoing update filter list for all interfaces is not set",
        "  Incoming update filter list for all interfaces is not set",
        "  Maximum path: 32",
        "  Routing for Networks:",
        "  Routing Information Sources:",
        "    Gateway         Distance      Last Update",
        "  Distance: (default is 4)"
    ]
}
ok: [SW2] => {
    "print_output.stdout_lines": [
        "",
        "*** IP Routing is NSF aware ***",
        "",
        "Routing Protocol is \"application\"",
        "  Sending updates every 0 seconds",
        "  Invalid after 0 seconds, hold down 0, flushed after 0",
        "  Outgoing update filter list for all interfaces is not set",
        "  Incoming update filter list for all interfaces is not set",
        "  Maximum path: 32",
        "  Routing for Networks:",
        "  Routing Information Sources:",
        "    Gateway         Distance      Last Update",
        "  Distance: (default is 4)"
    ]
}

PLAY RECAP *****************************************************************************************************************
SW1                        : ok=12   changed=6    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
SW2                        : ok=12   changed=6    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

